{"version":3,"sources":["img/hot_fm.png","img/iwave_fm.png","img/radio_phoenix.png","img/sun_fm.png","img/breeze_fm.png","img/radio_chikuni.png","img/rock_fm.png","img/christian_voice.png","img/metro_fm.png","img/zed_stage.png","img/5fm_radio.png","data/RadioStations.jsx","img/dc_talk_radio.png","img/komboni_radio.png","radio/Radio.js","data/sound/5-seconds-of-silence.mp3","pages/LandingPage.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["RadioStations","name","urls","icon","iWaveFmIcon","id","fiveFmIcon","xhr","headers","Referer","HotFmIcon","phoenixFmIcon","sunFmIcon","breezeFmIcon","radioChikuniIcon","rockFmIcon","christianVoiceIcon","metroFmIcon","zedStageIcon","RADIO_EVENTS","Radio","stations","ERRORS","currentStationID","currentSound","actionHandlersSet","withTryCatch","callback","errorMsg","error","console","isPlaying","playing","this","isMuted","mute","unMute","setupSoundEventListeners","sound","on","window","dispatchEvent","Event","navigator","mediaSession","playbackState","debug","playSound","a","play","Promise","resolve","reject","once","setPositionState","duration","playbackRate","position","pause","stop","handlePauseAction","handlePlayAction","setActionHandlers","action","handler","setActionHandler","log","playStation","radioStation","unload","document","title","metadata","MediaMetadata","album","artwork","src","sizes","type","stationProperties","html5","preload","Howl","LandingPage","useState","radio","setRadio","setPlaying","loading","setLoading","setRadioStation","mediaSessionEnabled","setMediaSessionEnabled","handleLoadErrorEvent","useCallback","useEffect","handleMuteEvent","handleUnmuteEvent","handlePlayEvent","addEventListener","removeEventListener","setupMediaSession","getElementById","getRadioStationClassNames","rs","className","Spinner","animation","role","map","index","Card","onClick","handleStationIconClick","Header","Body","Img","silence","loop","Button","variant","App","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"qOAAe,MAA0B,mCCA1B,MAA0B,qCCA1B,MAA0B,0CCA1B,MAA0B,mCCA1B,MAA0B,sCCA1B,MAA0B,0CCA1B,MAA0B,oCCA1B,MAA0B,4CCA1B,MAA0B,qCCA1B,MAA0B,sCCA1B,MAA0B,sCCsH1BA,GCtHA,IDeO,CAClB,CACIC,KAAM,iBACNC,KAAM,CACF,kDAEJC,KAAMC,EACNC,GAAI,EAAGC,cAEX,CACIL,KAAM,gBACNC,KAAM,CACF,8BAEJC,KE7BO,IAA0B,0CF8BjCE,GAAI,EACJE,IAAK,CACDC,QAAS,CACLC,QAAS,6BAIrB,CACIR,KAAM,SACNC,KAAM,CACF,0CAEJC,KAAMO,EACNL,GAAI,GAER,CACIJ,KAAM,qBACNC,KAAM,CACF,6DAEJC,KAAMQ,EACNN,GAAI,GAER,CACIJ,KAAM,SACNC,KAAM,CACF,sCAEJC,KAAMS,EACNP,GAAI,GAER,CACIJ,KAAM,oBACNC,KAAM,CACF,iDAEJC,KAAMU,EACNR,GAAI,GAER,CACIJ,KAAM,gBACNC,KAAM,CACF,0CAEJC,KAAMW,EACNT,GAAI,GAER,CACIJ,KAAM,cACNC,KAAM,CACF,qCAEJC,KAAMY,EACNV,GAAI,GAER,CACIJ,KAAM,wBACNC,KAAM,CACF,mDAEJC,KAAMa,EACNX,GAAI,GAER,CACIJ,KAAM,WACNC,KAAM,CACF,mDAEJC,KAAMc,EACNZ,GAAI,GAER,CACIJ,KAAM,kBACNC,KAAM,CACF,yCAEJC,KAAMe,EACNb,GAAI,IAER,CACIJ,KAAM,YACNC,KAAM,CACF,yCAEJC,KAAMG,EACND,GAAI,M,gCG7GNc,EACK,QADLA,EAEO,SAFPA,EAGO,UAHPA,EAIM,SAJNA,EAKO,UALPA,EAMU,aAGhB,SAASC,EAAMC,GACX,IAAMC,EAEU,aAGZC,EAAmB,KACnBC,EAAe,KACfC,GAAoB,EAElBC,EAAe,SAACC,EAAUC,GAC5B,IACI,OAAOD,IAEX,MAAOE,GACHC,QAAQD,MAAMD,EAAW,KAAOC,GAEpC,OAAO,GAGLE,EAAY,WACd,OAAOL,GAAa,WAChB,OAAOF,GAAgBA,EAAaQ,YACrC,yBAEPC,KAAKF,UAAYA,EAOjBE,KAAKC,QALW,WACZ,OAAOR,GAAa,WAChB,OAAOF,GAAgBA,EAAaW,SACrC,uBAYPF,KAAKE,KARQ,WACT,OAAOT,GAAa,WAChB,GAAIF,EAEA,OADAA,EAAaW,MAAK,IACX,IAEZ,oBAYPF,KAAKG,OARU,WACX,OAAOV,GAAa,WAChB,GAAIF,EAEA,OADAA,EAAaW,MAAK,IACX,IAEZ,sBAMP,IAAME,EAA2B,SAACC,GAC9BZ,GAAa,WACTY,EAAMC,GAAG,SAAS,WACdC,OAAOC,cAAc,IAAIC,MAAMvB,IAC/BwB,UAAUC,aAAaC,cAAgB,YAG3CP,EAAMC,GAAG,QAAQ,WACbC,OAAOC,cAAc,IAAIC,MAAMvB,IAC/BwB,UAAUC,aAAaC,cAAgB,YAG3CP,EAAMC,GAAG,QAAQ,WACbC,OAAOC,cAAc,IAAIC,MAAMvB,IAC/BwB,UAAUC,aAAaC,cAAgB,aAG3CP,EAAMC,GAAG,QAAQ,WACTf,EAAaW,OACbK,OAAOC,cAAc,IAAIC,MAAMvB,IAG/BqB,OAAOC,cAAc,IAAIC,MAAMvB,IAGnCwB,UAAUC,aAAaC,cAAgBrB,EAAaW,OAAS,SAAW,aAG5EG,EAAMC,GAAG,aAAa,WAClBC,OAAOC,cAAc,IAAIC,MAAMvB,OAGnCmB,EAAMC,GAAG,QAAQ,WACbT,QAAQgB,MAAM,sBAGlBR,EAAMC,GAAG,QAAQ,WACbT,QAAQgB,MAAM,0BAGnB,wCAGDC,EAAS,uCAAG,WAAOT,GAAP,SAAAU,EAAA,6DACdX,EAAyBC,GADX,kBAGPZ,GAAa,WAGhB,OAFAY,EAAMW,OAEC,IAAIC,SAAQ,SAACC,EAASC,GACzBd,EAAMe,KAAK,QAAQ,WAEfV,UAAUC,aAAaU,iBAAiB,CACpCC,SAAU,OACVC,aAAc,EACdC,SAAU,KAEdnB,EAAMH,MAAK,GACXQ,UAAUC,aAAaC,cAAgB,UAEvCM,GAAQ,MAEZb,EAAMe,KAAK,aAAa,SAAChD,EAAIwB,GACzBuB,EAAO9B,EAAmBO,WAGnC,yBAvBW,2CAAH,sDAyBToB,EAAO,WACTvB,GAAa,WACLF,IACIA,EAAaW,OACbX,EAAaW,MAAK,GAGlBX,EAAaW,MAAK,MAG3B,oBAEPF,KAAKgB,KAAOA,EASZhB,KAAKyB,MAPS,WACVhC,GAAa,WACLF,GACAA,EAAaW,MAAK,KAEvB,qBAWPF,KAAK0B,KAPQ,WACTjC,GAAa,WACLF,GACAA,EAAamC,SAElB,oBAIP,IAAMC,EAAoB,WACtBlC,GAAa,WACLF,IACIA,EAAaW,OACbX,EAAaW,MAAK,GAGlBX,EAAaW,MAAK,MAG3B,iCAEPF,KAAK2B,kBAAoBA,EAEzB,IAAMC,EAAmB,WACrBZ,KAEJhB,KAAK4B,iBAAmBA,EAExB,IAAMC,EAAoB,WACtB,IAAKrC,EAAmB,CASpB,IARA,IAQA,MARuB,CACnB,CAAC,OAAQ,kBAAMoC,MACf,CAAC,QAAS,kBAAMD,MAChB,CAAC,gBAAiB,kBAAM9B,QAAQgB,MAAM,uBACtC,CAAC,YAAa,kBAAMhB,QAAQgB,MAAM,mBAClC,CAAC,OAAQ,kBAAMhB,QAAQgB,MAAM,eAGjC,eAAgD,CAAC,IAAD,sBAApCiB,EAAoC,KAA5BC,EAA4B,KAC5C,IACIrB,UAAUC,aAAaqB,iBAAiBF,EAAQC,GAClD,MAAOnC,GACLC,QAAQoC,IAAR,oCAAyCH,EAAzC,6BAGRtC,GAAoB,IAItB0C,EAAW,uCAAG,WAAOC,GAAP,SAAApB,EAAA,+EACTtB,GAAa,WAKhB,GAJIF,GACAA,EAAa6C,SAGb9C,IAAqB6C,EAAa/D,GAKjC,CACDkB,EAAmB6C,EAAa/D,GAEhCiE,SAASC,MAAQD,SAASC,MAAQ,IAAMH,EAAanE,KACrD0C,UAAUC,aAAa4B,SAAW,IAAIhC,OAAOiC,cAAc,CACvDF,MAAOH,EAAanE,KACpByE,MAAO,WACPC,QAAS,CAAC,CAAEC,IAAKR,EAAajE,KAAM0E,MAAO,UAAWC,KAAM,gBAIhE,IAAMC,EAAoB,CACtBH,IAAK,CAACR,EAAalE,MACnB8E,OAAO,EACPC,SAAS,GAQb,OANIb,EAAa7D,MACbwE,EAAkBxE,IAAM6D,EAAa7D,KAEzCiB,EAAe,IAAI0D,OAAKH,GAExBjB,IACOf,EAAUvB,GA1BjB,IAAKO,IACD,OAAOgB,EAAUvB,KA2B1B,2BAnCa,2CAAH,sDAqCjBS,KAAKkC,YAAcA,E,WCxPR,MAA0B,iD,OCoL1BgB,EAtKK,WAAO,IAAD,EACIC,mBAAS,MADb,mBACfC,EADe,KACRC,EADQ,OAEQF,oBAAS,GAFjB,mBAEfpD,EAFe,KAENuD,EAFM,OAGQH,oBAAS,GAHjB,mBAGfI,EAHe,KAGNC,EAHM,OAIkBL,mBAAS,MAJ3B,mBAIfhB,EAJe,KAIDsB,EAJC,OAKgCN,oBAAS,GALzC,mBAKfO,EALe,KAKMC,EALN,KAOhBC,EAAuBC,uBAAY,WACrCL,GAAW,GACXF,GAAW,GACXG,EAAgB,2BAAKtB,GAAN,IAAoBvC,OAAO,OAC3C,CAACuC,IAEJ2B,qBAAU,WACNL,EAAgB1F,EAAc,IAC9BsF,EAAS,IAAIlE,EAAMpB,IAEnB,IAAMgG,EAAkB,WACpBT,GAAW,IAGTU,EAAoB,WACtBR,GAAW,GACXF,GAAW,IAGTW,EAAkB,WACpBT,GAAW,GACXF,GAAW,IAOf,OAJA/C,OAAO2D,iBAAiBhF,EAAoB6E,GAC5CxD,OAAO2D,iBAAiBhF,EAAsB8E,GAC9CzD,OAAO2D,iBAAiBhF,EAAsB+E,GAEvC,WACH1D,OAAO4D,oBAAoBjF,EAAoB6E,GAC/CxD,OAAO4D,oBAAoBjF,EAAsB8E,GACjDzD,OAAO4D,oBAAoBjF,EAAsB+E,MAEtD,IAEHH,qBAAU,WAEN,OADAvD,OAAO2D,iBAAiBhF,EAAyB0E,GAC1C,kBAAMrD,OAAO4D,oBAAoBjF,EAAyB0E,MAClE,CAACA,IAEJ,IAAMQ,EAAoB,YAEjBV,GAAuBvB,IACxBzB,UAAUC,aAAa4B,SAAW,IAAIhC,OAAOiC,cAAc,CACvDF,MAAOH,EAAanE,KACpByE,MAAO,SACPC,QAAS,CACL,CAAEC,IAAK,+BAAgCC,MAAO,QAASC,KAAM,aAC7D,CAAEF,IAAK,iCAAkCC,MAAO,UAAWC,KAAM,aACjE,CAAEF,IAAK,iCAAkCC,MAAO,UAAWC,KAAM,aACjE,CAAEF,IAAK,iCAAkCC,MAAO,UAAWC,KAAM,aACjE,CAAEF,IAAK,iCAAkCC,MAAO,UAAWC,KAAM,aACjE,CAAEF,IAAK,iCAAkCC,MAAO,UAAWC,KAAM,gBAIzER,SAASgC,eAAe,eAAerD,OAEvCqB,SAASgC,eAAe,eAAe5C,QACvCf,UAAUC,aAAaC,cAAgB,SAEvC+C,GAAuB,KAiCzBW,EAA4B,SAACC,GAC/B,IAAIC,EAAY,UAOhB,OANIrC,GAAgBoC,EAAGnG,KAAO+D,EAAa/D,KACvCoG,GAAwB,mBACpBrC,EAAavC,QACb4E,GAAwB,kBAGzBA,GAGX,OAAO,mCACH,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,eAAf,UACKjB,GAAW,0CAAI,cAACkB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,WAArC,WACZ,+BAAOxC,GAAgBA,EAAanE,UAExC,qBAAKwG,UAAU,gBAAf,SACKzG,EAAc6G,KAAI,SAACL,EAAIM,GACpB,OAAO,eAACC,EAAA,EAAD,CACSN,UAAWF,EAA0BC,GACjDQ,QAAS,kBA/BE,SAACR,GAC5Bd,EAAgBc,GAChBH,IACIhB,IACAI,GAAW,GACXF,GAAW,GACXF,EAAMlB,YAAYqC,IAyBSS,CAAuBT,IAFnC,UAIH,eAACO,EAAA,EAAKG,OAAN,CAAaT,UAAU,cAAvB,UACI,+BAAOD,EAAGvG,OACPmE,GAAgBoC,EAAGnG,KAAO+D,EAAa/D,IAAO2B,GAAY,4CAAQ,cAAC,IAAD,IAAR,OAC1DoC,GAAgBoC,EAAGnG,KAAO+D,EAAa/D,IAAOmF,GAAY,4CAAQ,cAACkB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,WAAzC,OAC1DxC,GAAgBoC,EAAGnG,KAAO+D,EAAa/D,IAAO+D,EAAavC,OAAU,4CAAQ,cAAC,IAAD,IAAR,UAG5E,cAACkF,EAAA,EAAKI,KAAN,UACI,cAACJ,EAAA,EAAKK,IAAN,CAAUxC,IAAK4B,EAAGrG,WAXjB2G,QAgBjB,sBAAKL,UAAU,2BAAf,UACI,uBAAO7B,IAAKyC,EAAShH,GAAG,cAAciH,MAAI,EAA1C,8BAGA,cAACC,EAAA,EAAD,CAAQd,UAAU,gBAAgBe,QAAQ,OAA1C,SACI,cAAC,IAAD,MAGJ,cAAC,WAAD,UAEKhC,EAAU,cAACkB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAASH,UAAU,gBAApD,SACP,sBAAMA,UAAU,kBAAhB,0BAEA,eAACc,EAAA,EAAD,CAAQd,UAAU,gBAAgBe,QAAQ,OACtCR,QA/EQ,WAC5BX,IACIhB,IACIA,EAAMtD,YACFsD,EAAMnD,UACNmD,EAAMjD,SAGNiD,EAAMlD,QAIVsD,GAAW,GACXF,GAAW,GACXF,EAAMlB,YAAYC,MAgEV,UAEKpC,GAAW,cAAC,IAAD,KACVA,GAAW,cAAC,IAAD,SAKzB,cAACuF,EAAA,EAAD,CAAQd,UAAU,gBAAgBe,QAAQ,OAA1C,SACI,cAAC,IAAD,e,MCrKLC,MAJf,WACE,OAAO,cAAC,EAAD,KCOWC,QACW,cAA7BlF,OAAOmF,SAASC,UAEe,UAA7BpF,OAAOmF,SAASC,UAEhBpF,OAAOmF,SAASC,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnE,SAASgC,eAAe,SFmHpB,kBAAmB3D,WACrBA,UAAU+F,cAAcC,MACrBV,MAAK,SAACW,GACLA,EAAaC,gBAEdC,OAAM,SAACjH,GACNC,QAAQD,MAAMA,EAAMkH,YE7G5BjB,M","file":"static/js/main.53349190.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hot_fm.572a6cfd.png\";","export default __webpack_public_path__ + \"static/media/iwave_fm.73d51dfc.png\";","export default __webpack_public_path__ + \"static/media/radio_phoenix.7376b7f6.png\";","export default __webpack_public_path__ + \"static/media/sun_fm.c74fe35a.png\";","export default __webpack_public_path__ + \"static/media/breeze_fm.2baf4b59.png\";","export default __webpack_public_path__ + \"static/media/radio_chikuni.40a8f6a1.png\";","export default __webpack_public_path__ + \"static/media/rock_fm.75c73c07.png\";","export default __webpack_public_path__ + \"static/media/christian_voice.c4d118c8.png\";","export default __webpack_public_path__ + \"static/media/metro_fm.e5f0531d.png\";","export default __webpack_public_path__ + \"static/media/zed_stage.4dab9508.png\";","export default __webpack_public_path__ + \"static/media/5fm_radio.89d530c1.png\";","import HotFmIcon from '../img/hot_fm.png';\nimport iWaveFmIcon from '../img/iwave_fm.png';\nimport phoenixFmIcon from '../img/radio_phoenix.png';\nimport sunFmIcon from '../img/sun_fm.png';\nimport breezeFmIcon from '../img/breeze_fm.png';\nimport radioChikuniIcon from '../img/radio_chikuni.png';\nimport rockFmIcon from '../img/rock_fm.png';\nimport christianVoiceIcon from '../img/christian_voice.png';\nimport metroFmIcon from '../img/metro_fm.png';\nimport zedStageIcon from '../img/zed_stage.png';\nimport fiveFmIcon from '../img/5fm_radio.png';\nimport dcTalkRadioIcon from '../img/dc_talk_radio.png'; //TODO\nimport komboniRadioIcon from '../img/komboni_radio.png';\n\n\nconst RadioStations = [\n    {\n        name: \"IWave FM Radio\",\n        urls: [\n            \"https://s47.myradiostream.com/:9934/listen.mp3\"\n        ],\n        icon: iWaveFmIcon,\n        id: 0, fiveFmIcon\n    },\n    {\n        name: \"Komboni Radio\",\n        urls: [\n            \"http://41.72.106.138:5000/\"\n        ],\n        icon: komboniRadioIcon,\n        id: 1,\n        xhr: {\n            headers: {\n                Referer: \"http://kombonipobo.com/\"\n            }\n        }\n    },\n    {\n        name: \"HOT FM\",\n        urls: [\n            \"http://s2.yesstreaming.net:7091/stream\"\n        ],\n        icon: HotFmIcon,\n        id: 2\n    },\n    {\n        name: \"Radio Phoenix 89.5\",\n        urls: [\n            \"https://23553.live.streamtheworld.com/RADIO_PHOENIXAAC_SC\"\n        ],\n        icon: phoenixFmIcon,\n        id: 3,\n    },\n    {\n        name: \"Sun FM\",\n        urls: [\n            \"http://11233.cloudrad.io:9102/live\"\n        ],\n        icon: sunFmIcon,\n        id: 4,\n    },\n    {\n        name: \"Breeze FM Chipata\",\n        urls: [\n            \"https://s47.myradiostream.com/9934/listen.mp3\"\n        ],\n        icon: breezeFmIcon,\n        id: 5,\n    },\n    {\n        name: \"Radio Chikuni\",\n        urls: [\n            \"http://centauri.shoutca.st:8102/stream\"\n        ],\n        icon: radioChikuniIcon,\n        id: 6,\n    },\n    {\n        name: \"965 Rock FM\",\n        urls: [\n            \"http://99.198.118.250:8238/stream\"\n        ],\n        icon: rockFmIcon,\n        id: 7,\n    },\n    {\n        name: \"Radio Christian Voice\",\n        urls: [\n            \"http://zas2.ndx.co.za/proxy/cvglobal?mp=/stream\"\n        ],\n        icon: christianVoiceIcon,\n        id: 8,\n    },\n    {\n        name: \"Metro FM\",\n        urls: [\n            \"https://s24.myradiostream.com/:15422/listen.mp3\"\n        ],\n        icon: metroFmIcon,\n        id: 9,\n    },\n    {\n        name: \"Zed Stage Radio\",\n        urls: [\n            \"https://node-03.zeno.fm/49836bqkpd0uv\"\n        ],\n        icon: zedStageIcon,\n        id: 10,\n    },\n    {\n        name: \"5fm Radio\",\n        urls: [\n            \"http://ca9.rcast.net:8014/;stream.mp3\"\n        ],\n        icon: fiveFmIcon,\n        id: 11,\n    }\n];\nexport default RadioStations;","export default __webpack_public_path__ + \"static/media/dc_talk_radio.8b6d29d4.png\";","export default __webpack_public_path__ + \"static/media/komboni_radio.5970a701.png\";","import { Howl } from 'howler';\n\n/*TODO \n1 ON ERROR, SEND OUT AN EMAIL WITH DETAIL\n*/\n\nconst RADIO_EVENTS = {\n    MUTED: \"MUTED\",\n    UNMUTED: \"UMUTED\",\n    PLAYING: \"PLAYING\",\n    PAUSED: \"PAUSED\",\n    STOPPED: \"STOPPED\",\n    LOAD_ERROR: \"LOAD_ERROR\"\n}\n\nfunction Radio(stations) {\n    const ERRORS = {\n        NETWORK_ERROR: \"NETWORK ERROR\",\n        LOAD_ERROR: \"LOAD ERROR\"\n    }\n\n    let currentStationID = null;\n    let currentSound = null;\n    let actionHandlersSet = false;\n\n    const withTryCatch = (callback, errorMsg) => {\n        try {\n            return callback();\n        }\n        catch (error) {\n            console.error(errorMsg + \": \" + error);\n        }\n        return false;\n    }\n\n    const isPlaying = () => {\n        return withTryCatch(() => {\n            return currentSound && currentSound.playing()\n        }, \"Error in isPlaying()\");\n    };\n    this.isPlaying = isPlaying;\n\n    const isMuted = () => {\n        return withTryCatch(() => {\n            return currentSound && currentSound.mute();\n        }, \"Error in isMuted()\");\n    };\n    this.isMuted = isMuted;\n\n    const mute = () => {\n        return withTryCatch(() => {\n            if (currentSound) {\n                currentSound.mute(true);\n                return true;\n            }\n        }, \"Error in mute()\");\n    };\n    this.mute = mute;\n\n    const unMute = () => {\n        return withTryCatch(() => {\n            if (currentSound) {\n                currentSound.mute(false);\n                return true;\n            }\n        }, \"Error in unMute()\");\n    }\n    this.unMute = unMute;\n\n\n\n    const setupSoundEventListeners = (sound) => {\n        withTryCatch(() => {\n            sound.on('pause', () => {\n                window.dispatchEvent(new Event(RADIO_EVENTS.PAUSED));\n                navigator.mediaSession.playbackState = \"paused\";\n            });\n\n            sound.on('stop', () => {\n                window.dispatchEvent(new Event(RADIO_EVENTS.STOPPED));\n                navigator.mediaSession.playbackState = \"paused\";\n            });\n\n            sound.on('play', () => {\n                window.dispatchEvent(new Event(RADIO_EVENTS.PLAYING));\n                navigator.mediaSession.playbackState = \"playing\";\n            });\n\n            sound.on('mute', () => {\n                if (currentSound.mute()) {\n                    window.dispatchEvent(new Event(RADIO_EVENTS.MUTED));\n                }\n                else {\n                    window.dispatchEvent(new Event(RADIO_EVENTS.UNMUTED));\n                }\n\n                navigator.mediaSession.playbackState = currentSound.mute() ? \"paused\" : \"playing\";\n            });\n\n            sound.on('loaderror', () => {\n                window.dispatchEvent(new Event(RADIO_EVENTS.LOAD_ERROR));\n            })\n\n            sound.on('load', () => {\n                console.debug(\"cwm load event!\");\n            });\n\n            sound.on('rate', () => {\n                console.debug(\"cwm unlock event!\");\n            });\n\n        }, \"Error in setupSoundEventListeners()\");\n    };\n\n    const playSound = async (sound) => {\n        setupSoundEventListeners(sound);\n\n        return withTryCatch(() => {\n            sound.play();\n\n            return new Promise((resolve, reject) => {\n                sound.once('play', () => {\n\n                    navigator.mediaSession.setPositionState({\n                        duration: 999999,\n                        playbackRate: 1,\n                        position: 80\n                    });\n                    sound.mute(false);\n                    navigator.mediaSession.playbackState = \"playing\";\n\n                    resolve(true);\n                });\n                sound.once('loaderror', (id, error) => {\n                    reject(ERRORS.LOAD_ERROR, error);\n                });\n            })\n        }, \"Error in playSound()\")\n    };\n    const play = () => {\n        withTryCatch(() => {\n            if (currentSound) {\n                if (currentSound.mute()) {\n                    currentSound.mute(false);\n                }\n                else {\n                    currentSound.mute(true);\n                }\n            }\n        }, \"Error in play()\");\n    }\n    this.play = play;\n\n    const pause = () => {\n        withTryCatch(() => {\n            if (currentSound) {\n                currentSound.mute(true);\n            }\n        }, \"Error in pause()\")\n    };\n    this.pause = pause;\n\n    const stop = () => {\n        withTryCatch(() => {\n            if (currentSound) {\n                currentSound.stop();\n            }\n        }, \"Error in stop()\");\n    }\n    this.stop = stop;\n\n    const handlePauseAction = () => {\n        withTryCatch(() => {\n            if (currentSound) {\n                if (currentSound.mute()) {\n                    currentSound.mute(false);\n                }\n                else {\n                    currentSound.mute(true);\n                }\n            }\n        }, \"Error in handlePauseAction()\");\n    }\n    this.handlePauseAction = handlePauseAction;\n\n    const handlePlayAction = () => {\n        play();\n    }\n    this.handlePlayAction = handlePlayAction;\n\n    const setActionHandlers = () => {\n        if (!actionHandlersSet) {\n            const actionHandlers = [\n                ['play', () => handlePlayAction()],\n                ['pause', () => handlePauseAction()],\n                ['previoustrack', () => console.debug(\"cwm previoustrack\")],\n                ['nexttrack', () => console.debug(\"cwm nexttrack\")],\n                ['stop', () => console.debug(\"cwm stop\")],\n            ];\n\n            for (const [action, handler] of actionHandlers) {\n                try {\n                    navigator.mediaSession.setActionHandler(action, handler);\n                } catch (error) {\n                    console.log(`The media session action \"${action}\" is not supported yet.`);\n                }\n            }\n            actionHandlersSet = true;\n        }\n    };\n\n    const playStation = async (radioStation) => {\n        return withTryCatch(() => {\n            if (currentSound) {\n                currentSound.unload();\n            }\n\n            if (currentStationID === radioStation.id) {\n                if (!isPlaying()) {\n                    return playSound(currentSound);\n                }\n            }\n            else {\n                currentStationID = radioStation.id;\n\n                document.title = document.title + ' ' + radioStation.name;\n                navigator.mediaSession.metadata = new window.MediaMetadata({\n                    title: radioStation.name,\n                    album: 'ZRadio 2',\n                    artwork: [{ src: radioStation.icon, sizes: '384x384', type: 'image/png' },\n                    ]\n                });\n\n                const stationProperties = {\n                    src: [radioStation.urls],\n                    html5: true,\n                    preload: false,\n                };\n                if (radioStation.xhr) {\n                    stationProperties.xhr = radioStation.xhr\n                }\n                currentSound = new Howl(stationProperties);\n\n                setActionHandlers();\n                return playSound(currentSound);\n            }\n        }, \"Error in playStation()\");\n    }\n    this.playStation = playStation;\n}\n\nexport { Radio, RADIO_EVENTS };","export default __webpack_public_path__ + \"static/media/5-seconds-of-silence.be2bc6f4.mp3\";","import { Spinner, Button, Card } from 'react-bootstrap';\nimport { Fragment, useEffect, useState, useCallback } from 'react';\nimport RadioStations from '../data/RadioStations';\nimport { RADIO_EVENTS, Radio } from '../radio/Radio';\nimport {\n    MdUndo,\n    MdRedo,\n    MdOutlinePlayArrow,\n    MdOutlinePause,\n    MdOutlineHeadphones,\n    MdError\n} from 'react-icons/md';\nimport silence from '../data/sound/5-seconds-of-silence.mp3';\n\nconst LandingPage = () => {\n    const [radio, setRadio] = useState(null);\n    const [playing, setPlaying] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [radioStation, setRadioStation] = useState(null);\n    const [mediaSessionEnabled, setMediaSessionEnabled] = useState(false);\n\n    const handleLoadErrorEvent = useCallback(() => {\n        setLoading(false);\n        setPlaying(false);\n        setRadioStation({ ...radioStation, error: true });\n    }, [radioStation]);\n\n    useEffect(() => {\n        setRadioStation(RadioStations[0]);\n        setRadio(new Radio(RadioStations));\n\n        const handleMuteEvent = () => {\n            setPlaying(false);\n        };\n\n        const handleUnmuteEvent = () => {\n            setLoading(false);\n            setPlaying(true);\n        };\n\n        const handlePlayEvent = () => {\n            setLoading(false);\n            setPlaying(true);\n        }\n\n        window.addEventListener(RADIO_EVENTS.MUTED, handleMuteEvent);\n        window.addEventListener(RADIO_EVENTS.UNMUTED, handleUnmuteEvent);\n        window.addEventListener(RADIO_EVENTS.PLAYING, handlePlayEvent);\n\n        return () => {\n            window.removeEventListener(RADIO_EVENTS.MUTED, handleMuteEvent);\n            window.removeEventListener(RADIO_EVENTS.UNMUTED, handleUnmuteEvent);\n            window.removeEventListener(RADIO_EVENTS.PLAYING, handlePlayEvent);\n        }\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener(RADIO_EVENTS.LOAD_ERROR, handleLoadErrorEvent);\n        return () => window.removeEventListener(RADIO_EVENTS.LOAD_ERROR, handleLoadErrorEvent);\n    }, [handleLoadErrorEvent]);\n\n    const setupMediaSession = () => {\n        //this is a hack to allow mediasession to work better with ios.\n        if (!mediaSessionEnabled && radioStation) {\n            navigator.mediaSession.metadata = new window.MediaMetadata({\n                title: radioStation.name,\n                album: 'ZRadio',\n                artwork: [\n                    { src: 'https://dummyimage.com/96x96', sizes: '96x96', type: 'image/png' },\n                    { src: 'https://dummyimage.com/128x128', sizes: '128x128', type: 'image/png' },\n                    { src: 'https://dummyimage.com/192x192', sizes: '192x192', type: 'image/png' },\n                    { src: 'https://dummyimage.com/256x256', sizes: '256x256', type: 'image/png' },\n                    { src: 'https://dummyimage.com/384x384', sizes: '384x384', type: 'image/png' },\n                    { src: 'https://dummyimage.com/512x512', sizes: '512x512', type: 'image/png' },\n                ]\n            });\n\n            document.getElementById('silentSound').play();\n\n            document.getElementById('silentSound').pause();\n            navigator.mediaSession.playbackState = \"paused\";\n\n            setMediaSessionEnabled(true);\n        }\n    }\n\n    const handlePlayPauseBtnClick = () => {\n        setupMediaSession();\n        if (radio) {\n            if (radio.isPlaying()) {\n                if (radio.isMuted()) {\n                    radio.unMute();\n                }\n                else {\n                    radio.mute();\n                }\n            }\n            else {\n                setLoading(true);\n                setPlaying(false);\n                radio.playStation(radioStation);\n            }\n        }\n    }\n\n    const handleStationIconClick = (rs) => {\n        setRadioStation(rs);\n        setupMediaSession();\n        if (radio) {\n            setLoading(true);\n            setPlaying(false);\n            radio.playStation(rs);\n        }\n    }\n\n    const getRadioStationClassNames = (rs) => {\n        let className = \"shadow \";\n        if (radioStation && rs.id === radioStation.id) {\n            className = className + \"current-station \";\n            if (radioStation.error) {\n                className = className + \"station-error\";\n            }\n        }\n        return className;\n    };\n\n    return <>\n        <div className=\"media-player-container\">\n            <div className=\"media-header\">\n                {loading && <>  <Spinner animation=\"border\" role=\"status\" />&nbsp; </>}\n                <span>{radioStation && radioStation.name}</span>\n            </div>\n            <div className=\"media-content\">\n                {RadioStations.map((rs, index) => {\n                    return <Card\n                        key={index} className={getRadioStationClassNames(rs)}\n                        onClick={() => handleStationIconClick(rs)}\n                    >\n                        <Card.Header className=\"text-center\">\n                            <span>{rs.name}</span>\n                            {((radioStation && rs.id === radioStation.id) && playing) && <>&nbsp;<MdOutlineHeadphones /> </>}\n                            {((radioStation && rs.id === radioStation.id) && loading) && <>&nbsp;<Spinner animation=\"border\" role=\"status\" /> </>}\n                            {((radioStation && rs.id === radioStation.id) && radioStation.error) && <>&nbsp;<MdError /> </>}\n\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Img src={rs.icon} />\n                        </Card.Body>\n                    </Card>\n                })}\n            </div>\n            <div className=\"media-controls-container\">\n                <audio src={silence} id=\"silentSound\" loop>\n                    audio unspported\n                </audio>\n                <Button className=\"media-control\" variant=\"dark\">\n                    <MdUndo />\n                </Button>\n\n                <Fragment>\n\n                    {loading ? <Spinner animation=\"border\" role=\"status\" className=\"media-control\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </Spinner> :\n                        <Button className=\"media-control\" variant=\"dark\"\n                            onClick={handlePlayPauseBtnClick}>\n                            {playing && <MdOutlinePause />}\n                            {!playing && <MdOutlinePlayArrow />}\n                        </Button>\n                    }\n                </Fragment>\n\n                <Button className=\"media-control\" variant=\"dark\">\n                    <MdRedo />\n                </Button>\n            </div>\n        </div>\n    </>;\n}\n\nexport default LandingPage;","//import './App.css';\nimport LandingPage from './pages/LandingPage';\nimport './styles/main.scss';\n\nfunction App() {\n  return <LandingPage />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}